version: '2.4'

networks:
  selenoid:
    name: selenoid
services:
  mysql:
    image: mysql
    environment:
      MYSQL_DATABASE: 'vkeducation'
      MYSQL_USER: 'test_qa'
      MYSQL_PASSWORD: 'qa_test'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 5s
      retries: 10
    networks:
      selenoid:
  mock:
    image: mock
    ports:
      - "5000:5000"
    command: python app.py
    depends_on:
     mysql:
        condition: service_healthy
    restart: on-failure
    networks:
      selenoid:
  myapp:
    image: myapp
    container_name: myapp
    hostname: myapp
    ports:
      - '3088:3088'
    volumes:
      - "./config:/app/conf/config"
    links:
      - mysql
      - mock
    command: "/app/myapp --config=conf/config"
    depends_on:
      mysql:
        condition: service_healthy
      mock:
        condition: service_started
    restart: on-failure
    networks:
      selenoid:
  selenoid:
    container_name: selenoid
    image: "aerokube/selenoid:latest-release"
    ports:
      - "4444:4444"
    volumes:
      - 'C:\Users\Farrien\.aerokube\selenoid:/etc/selenoid'
      - '//var/run/docker.sock:/var/run/docker.sock'
      - 'C:\Users\Farrien\.aerokube\selenoid:/opt/selenoid/video'
      - 'C:\Users\Farrien\.aerokube\selenoid:/opt/selenoid/logs'
    command: [ "-conf", "/etc/selenoid/browsers.json", "-container-network", "selenoid", "-limit", "10", "-retry-count", "2" ]
    networks:
      selenoid:
  selenoid-ui:
    container_name: selenoid-ui
    image: "aerokube/selenoid-ui:latest-release"
    links:
      - selenoid
    ports:
      - "8080:8080"
    command: [ "--selenoid-uri", "http://selenoid:4444" ]
    networks:
      selenoid: